Message "Searching installation of " + $ProductName$ + " 64 Bit..."

; Ergebnis ist StringList (mehrere Einträge möglich);
; in einer Zeile werden drei Ergebnisse mit "|" abgetrennt geliefert: Registrykey (mit Pfad) | Bereich Registry (kann direkt getRegistryValue übergeben werden | DisplayName
; z.B. HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\Test64|64bit|Test Registry Entry64
Set $ResultList$ = SearchRegistryUninstallKeys($ProductName$)

Switch count ($ResultList$)
	Case "0"
		comment "No installations of " + $ProductName$ + " found in registry. Nothing to do"
	EndCase
	Case "1"
		Set $RegId$ = takeString (0,splitString(takeString(0,$ResultList$), '|'))
		Message "Uninstalling " + $ProductName$ + " 64 Bit..."
		
		; für MSI wird nur der eigentliche Regkey (ohne Pfad) benötigt
		Set $RegId$ = takeString (-1,splitString($RegId$,"\"))
		Winbatch_uninstall_msi
		Set $ExitCode$ = getLastExitCode
		if stringToBool(isMsiExitcodeFatal($ExitCode$, "True", $ErrorString$))		
			isFatalError
		endif	
		
		Set $RegId$ = takeString (0,splitString(takeString(0,$ResultList$), '|'))
		; da DisplayIcon bzw. InstallLocation manuell hinzugefügt wurde, muss der Regkey manuell aufgeräumt werden
		comment "Cleanup registry"
		Registry_uninstall /64Bit

		comment "include custom post deinstall file"
		set $CustomPostDeinstall$ = getProductProperty("custom-post-deinstall","none")
		if not ($CustomPostDeinstall$ = "none")
			if FileExists("%ScriptPath%\custom\" + $CustomPostDeinstall$)
				include_insert "%ScriptPath%\custom\" + $CustomPostDeinstall$
			endif
		endif
	EndCase
	DefaultCase
		logError "Found more than one installation! This case is not intended yet in this script! Stop now."
		isFatalError
	EndCase
EndSwitch   

[Winbatch_uninstall_msi]
msiexec /x $RegId$ $SilentOption$ REBOOT=ReallySuppress

[Registry_uninstall]
deletekey [$RegId$]