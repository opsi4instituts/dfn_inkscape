[Actions]

; common Values for (un)installation
include_insert "common.opsiinc"

if not(HasMinimumSpace ("%SystemDrive%", $MinimumSpace$))
	LogError "Not enough space on %SystemDrive%, " + $MinimumSpace$ + " on drive %SystemDrive% needed for " + $ProductId$
	isFatalError
	; Stop process and set installation status to failed
else
	if FileExists("%ScriptPath%\delsub64.opsiscript")
		comment "Start uninstall sub section"
		Sub "%ScriptPath%\delsub64.opsiscript"
	endif

	Message "Installing %installingProdName% (%installingProdVersion%) 64 Bit..."
	comment "Start setup program"
	Winbatch_install_msi
	Set $ExitCode$ = getLastExitCode
	if stringToBool(isMsiExitcodeFatal($ExitCode$, "True", $ErrorString$))
		isFatalError
	endif

	comment "Test for installation success"
	; Ergebnis ist StringList (mehrere Einträge möglich);
	; in einer Zeile werden drei Ergebnisse mit "|" abgetrennt geliefert: Registrykey (mit Pfad) | Bereich Registry (kann direkt getRegistryValue übergeben werden | DisplayName
	; z.B. HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Uninstall\Test64|64bit|Test Registry Entry64
	Set $ResultList$ = SearchRegistryUninstallKeys($ProductName$)

	if ( count ($ResultList$) = "0" )
		logError "Fatal: After Installation " + $ProductName$ + " could not be found in " + $RegPathUninstall$
		isFatalError
	else
		Set $RegId$ = takeString (0,splitString(takeString(0,$ResultList$), '|'))
		Set $RegBitScope$ = takeString (1,splitString(takeString(0,$ResultList$), '|'))
		Set $RegDisplayName$ = takeString (2,splitString(takeString(0,$ResultList$), '|'))
		
		comment "Check version"
		Set $InstalledVersion$ = GetRegistryValue($RegId$, "DisplayVersion",$RegBitScope$)
		if not (contains($InstalledVersion$, $ProductVersion$))
			LogError "Wrong version number found, something went wrong."
			isFatalError
		endif
		
		; Leider setzt das MSI keine 'InstallLocation' bzw. 'DisplayIcon' muss also manuell hier gemacht werden.
		; Damit es für eine spätere Deinstallation zur Verfügung steht, wird es in die Registry geschrieben
		comment "Patch missing registry keys like 'InstallLocation' and 'DisplayIcon'"
		Registry_install /64Bit
	endif
	
	; MSI legt standardmäßig ein Desktop-Icon an, keinen einfachen Weg gefunden, das zu unterbinden. Name des Icons lautet wie "DisplayName"
	set $DesktopLink$ = getProductProperty("desktop-link","false")
	if $DesktopLink$ = "false"
		comment "Delete common desktop icon generated by MSI"
		Linkfolder_delete_desktoplink	
	endif

	comment "include custom post install file"
	set $CustomPostInstall$ = getProductProperty("custom-post-install","none")
	if not ($CustomPostInstall$ = "none")
		if FileExists("%ScriptPath%\custom\" + $CustomPostInstall$)
			include_insert "%ScriptPath%\custom\" + $CustomPostInstall$
		endif
	endif
endif

[Winbatch_install_msi]
msiexec $SilentOption$ /i "%ScriptPath%\$InstFile$" /l* "$LogDir$\$ProductId$.install_log.txt" ALLUSERS=1 REBOOT=ReallySuppress

[Registry_install]
openkey [$RegId$]
set "InstallLocation" = REG_SZ:"$InstallDir$"
set "DisplayIcon" = REG_SZ:"$PathToExe$"

[Linkfolder_delete_desktoplink]
set_basefolder common_desktopdirectory
set_subfolder ""
delete_element $RegDisplayName$

